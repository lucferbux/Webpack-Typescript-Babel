worker_processes 1;

events { worker_connections 1024; }

http {

    include mime.types;
    sendfile on;

    client_header_timeout 6000;
    client_body_timeout 6000;
    fastcgi_read_timeout 6000;
    client_max_body_size 6000m;
    fastcgi_buffers 8 128k;
    fastcgi_buffer_size 128k;
    proxy_connect_timeout 6000;


    gzip              on;
    gzip_http_version 1.0;
    gzip_proxied      any;
    gzip_min_length   500;
    gzip_disable      "MSIE [1-6]\.";
    gzip_types        text/plain text/xml text/css
                      text/comma-separated-values
                      text/javascript
                      application/x-javascript
                      application/atom+xml;

    # List of application servers
    #upstream app_servers {
     #   server localhost:8080;
    #}

    # Configuration for the server
    server {
        listen 443 default_server ssl;
        listen 80;
        listen [::]:80;
        server_name example.org;
        ssl_certificate /var/certificates/localhost.crt;
        ssl_certificate_key /var/certificates/localhost.key;
        

        # Redirect
        # if ($scheme = http) {
        #     return 301 https://$server_name$request_uri;
        # }

      location / {

        # header options
        #  if ($request_method = 'OPTIONS') {
           
        #     # Uncomment to allow different origin requests
        #     #add_header 'Access-Control-Allow-Origin' '*';
        #     add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        #     #
        #     # Custom headers and headers various browsers *should* be OK with but aren't
        #     #
        #     add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        #     #
        #     # Tell client that this pre-flight info is valid for 20 days
        #     #
        #     add_header 'Access-Control-Max-Age' 1728000;
        #     add_header 'Content-Type' 'text/plain; charset=utf-8';
        #     add_header 'Content-Length' 0;
        #     return 204;
        # }

        # # if ($request_method = 'POST') {
        # #     # Uncomment to allow different origin requests
        # #     add_header 'Access-Control-Allow-Origin' '*';
        # #     add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        # #     add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        # #     add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        # # }

        # if ($request_method = 'GET') {
        #     add_header 'Access-Control-Allow-Origin' '*';
        #     add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        #     add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        #     add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        # }
        
        root   /usr/share/nginx/html;
        index  index.html;
        expires -1;
        add_header Pragma "no-cache";
        add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
          
        proxy_redirect off;
        proxy_set_header host $host;
        proxy_set_header X-real-ip $remote_addr;
        proxy_set_header X-forward-for $proxy_add_x_forwarded_for;

        try_files $uri$args $uri$args/ $uri $uri/ /index.html =404;
      }


	}
}
